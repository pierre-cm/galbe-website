name: Release & Deploy
on:
  workflow_dispatch:
    inputs:
      scope:
        description: 'Version bump scope (patch, minor, major)'
        required: false
jobs:
  release:
    name: Build, install & release
    runs-on: ubuntu-latest
    env:
      PUBLIC_BASE: /
      GALBE_REPO: git@github.com:pierre-cm/galbe.git
      GH_REPO: pierre-cm/galbe
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install
        run: bun install
      - name: Build
        run: bun run build
      - name: Release
        run: |
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config user.name "${GITHUB_ACTOR}"
          bun run scripts/release.ts ${{ github.event.inputs.scope }}
          git push origin main
      - name: Compute version
        run: |
          cd ./.docs
          VERSION=$(jq -r '.version' ../package.json)-$(git rev-parse --short HEAD)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
      - name: Deploy website
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_VPS_PRIVATE_KEY }}
          script: |
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            docker service update --image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} website
